Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
weekly_delays = (
    air_dec
    .groupby([pd.Grouper(key="Date", freq="W"), "Carrier"])
    ["ArrDelay"]               # extract one column
    .mean()                    # take average
    .unstack(level="Carrier")  # Flip carrier up as column names
)
weekly_delays
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
[0;32m/tmp/ipykernel_3723/3961394851.py[0m in [0;36m<module>[0;34m[0m
[1;32m      1[0m weekly_delays = (
[0;32m----> 2[0;31m     [0mair_dec[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m      3[0m     [0;34m.[0m[0mgroupby[0m[0;34m([0m[0;34m[[0m[0mpd[0m[0;34m.[0m[0mGrouper[0m[0;34m([0m[0mkey[0m[0;34m=[0m[0;34m"Date"[0m[0;34m,[0m [0mfreq[0m[0;34m=[0m[0;34m"W"[0m[0;34m)[0m[0;34m,[0m [0;34m"Carrier"[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m      4[0m     [0;34m[[0m[0;34m"ArrDelay"[0m[0;34m][0m               [0;31m# extract one column[0m[0;34m[0m[0;34m[0m[0m
[1;32m      5[0m     [0;34m.[0m[0mmean[0m[0;34m([0m[0;34m)[0m                    [0;31m# take average[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/frame.py[0m in [0;36mgroupby[0;34m(self, by, axis, level, as_index, sort, group_keys, squeeze, observed, dropna)[0m
[1;32m   7624[0m         [0;31m# error: Argument "squeeze" to "DataFrameGroupBy" has incompatible type[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m   7625[0m         [0;31m# "Union[bool, NoDefault]"; expected "bool"[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 7626[0;31m         return DataFrameGroupBy(
[0m[1;32m   7627[0m             [0mobj[0m[0;34m=[0m[0mself[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m   7628[0m             [0mkeys[0m[0;34m=[0m[0mby[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/groupby/groupby.py[0m in [0;36m__init__[0;34m(self, obj, keys, axis, level, grouper, exclusions, selection, as_index, sort, group_keys, squeeze, observed, mutated, dropna)[0m
[1;32m    886[0m             [0;32mfrom[0m [0mpandas[0m[0;34m.[0m[0mcore[0m[0;34m.[0m[0mgroupby[0m[0;34m.[0m[0mgrouper[0m [0;32mimport[0m [0mget_grouper[0m[0;34m[0m[0;34m[0m[0m
[1;32m    887[0m [0;34m[0m[0m
[0;32m--> 888[0;31m             grouper, exclusions, obj = get_grouper(
[0m[1;32m    889[0m                 [0mobj[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    890[0m                 [0mkeys[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/groupby/grouper.py[0m in [0;36mget_grouper[0;34m(obj, key, axis, level, sort, observed, mutated, validate, dropna)[0m
[1;32m    875[0m         [0;31m# allow us to passing the actual Grouping as the gpr[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    876[0m         ping = (
[0;32m--> 877[0;31m             Grouping(
[0m[1;32m    878[0m                 [0mgroup_axis[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    879[0m                 [0mgpr[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/groupby/grouper.py[0m in [0;36m__init__[0;34m(self, index, grouper, obj, level, sort, observed, in_axis, dropna)[0m
[1;32m    500[0m             [0;31m# check again as we have by this point converted these[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    501[0m             [0;31m# to an actual value (rather than a pd.Grouper)[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 502[0;31m             _, newgrouper, newobj = self.grouping_vector._get_grouper(
[0m[1;32m    503[0m                 [0;31m# error: Value of type variable "FrameOrSeries" of "_get_grouper"[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    504[0m                 [0;31m# of "Grouper" cannot be "Optional[FrameOrSeries]"[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/resample.py[0m in [0;36m_get_grouper[0;34m(self, obj, validate)[0m
[1;32m   1561[0m     [0;32mdef[0m [0m_get_grouper[0m[0;34m([0m[0mself[0m[0;34m,[0m [0mobj[0m[0;34m,[0m [0mvalidate[0m[0;34m:[0m [0mbool[0m [0;34m=[0m [0;32mTrue[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1562[0m         [0;31m# create the resampler and return our binner[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1563[0;31m         [0mr[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_get_resampler[0m[0;34m([0m[0mobj[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1564[0m         [0;32mreturn[0m [0mr[0m[0;34m.[0m[0mbinner[0m[0;34m,[0m [0mr[0m[0;34m.[0m[0mgrouper[0m[0;34m,[0m [0mr[0m[0;34m.[0m[0mobj[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1565[0m [0;34m[0m[0m

[0;32m/usr/share/miniconda3/envs/lecture-datascience/lib/python3.8/site-packages/pandas/core/resample.py[0m in [0;36m_get_resampler[0;34m(self, obj, kind)[0m
[1;32m   1553[0m             [0;32mreturn[0m [0mTimedeltaIndexResampler[0m[0;34m([0m[0mobj[0m[0;34m,[0m [0mgroupby[0m[0;34m=[0m[0mself[0m[0;34m,[0m [0maxis[0m[0;34m=[0m[0mself[0m[0;34m.[0m[0maxis[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1554[0m [0;34m[0m[0m
[0;32m-> 1555[0;31m         raise TypeError(
[0m[1;32m   1556[0m             [0;34m"Only valid with DatetimeIndex, "[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1557[0m             [0;34m"TimedeltaIndex or PeriodIndex, "[0m[0;34m[0m[0;34m[0m[0m

[0;31mTypeError[0m: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'
TypeError: Only valid with DatetimeIndex, TimedeltaIndex or PeriodIndex, but got an instance of 'Index'

